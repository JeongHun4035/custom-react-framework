{
  "codes": {
    "example": "import CodeEditor from \"@/components/CodeEditor\"\nimport CustomTable from \"@/components/CustomTable\"\nimport \"@/examples/examples.css\"\nimport tables from \"@/examples/code/tables.json\"\n\nconst TablePage = () => {\n  const mockColumns = [\n    {\n      id: \"col1\",\n      name: \"COLUMN1\",\n    },\n    {\n      id: \"col2\",\n      name: \"COLUMN2\",\n    },\n    {\n      id: \"col3\",\n      name: \"COLUMN3\",\n    },\n    {\n      id: \"col4\",\n      name: \"COLUMN4\",\n    },\n    {\n      id: \"col5\",\n      name: \"COLUMN5\",\n    },\n    {\n      id: \"col6\",\n      name: \"COLUMN6\",\n    },\n  ]\n  const mockRows = [\n    {\n      number: 1,\n      id: \"row-1\",\n      col1: \"ROW1-1\",\n      col2: \"ROW1-2\",\n      col3: \"ROW1-3\",\n      col4: \"ROW1-4\",\n      col5: \"ROW1-5\",\n      col6: \"ROW1-6\",\n    },\n    {\n      number: 2,\n      id: \"row-2\",\n      col1: \"ROW2-1\",\n      col2: \"ROW2-2\",\n      col3: \"ROW2-3\",\n      col4: \"ROW2-4\",\n      col5: \"ROW2-5\",\n      col6: \"ROW2-6\",\n    },\n    {\n      number: 3,\n      id: \"row-3\",\n      col1: \"ROW3-1\",\n      col2: \"ROW3-2\",\n      col3: \"ROW3-3\",\n      col4: \"ROW3-4\",\n      col5: \"ROW3-5\",\n      col6: \"ROW3-6\",\n    },\n    {\n      number: 4,\n      id: \"row-4\",\n      col1: \"ROW4-1\",\n      col2: \"ROW4-2\",\n      col3: \"ROW4-3\",\n      col4: \"ROW4-4\",\n      col5: \"ROW4-5\",\n      col6: \"ROW4-6\",\n    },\n    {\n      number: 5,\n      id: \"row-5\",\n      col1: \"ROW5-1\",\n      col2: \"ROW5-2\",\n      col3: \"ROW5-3\",\n      col4: \"ROW5-4\",\n      col5: \"ROW5-5\",\n      col6: \"ROW5-6\",\n    },\n    {\n      number: 6,\n      id: \"row-6\",\n      col1: \"ROW6-1\",\n      col2: \"ROW6-2\",\n      col3: \"ROW6-3\",\n      col4: \"ROW6-4\",\n      col5: \"ROW6-5\",\n      col6: \"ROW6-6\",\n    },\n  ]\n\n  const columnClickEvent = (column) => {\n    console.log(column)\n    window.alert(`column.id: ${column.id}\\ncolumn.name: ${column.name}`)\n  }\n\n  const rowClickEvent = (row) => {\n    console.log(row)\n    window.alert(`row.id: ${row.id}\\nrow.number: ${row.number}`)\n  }\n\n  const cellClickEvent = (cell) => {\n    console.log(cell)\n    window.alert(`cell: ${cell}`)\n  }\n\n  return (\n    <div>\n      <div className=\"examples-wrapper\">\n        <div>\n          <h2>1. Standard</h2>\n          <div className=\"example-area\">\n            <div className=\"example-item\">\n              <CustomTable\n                tableId=\"examples\"\n                columns={mockColumns}\n                rows={mockRows}\n                onColumnClick={columnClickEvent}\n                onRowClick={rowClickEvent}\n                onCellClick={cellClickEvent}\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"code-area\">\n          <div>\n            <h2>Component code</h2>\n            <CodeEditor value={tables.code.component} />\n          </div>\n          <div>\n            <h2>Example code</h2>\n            <CodeEditor value={tables.codes.example} />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default TablePage\n",
    "component": "import styled from \"styled-components\"\n\nconst TableWrapper = styled.div`\n  border: solid 1px;\n  width: ${(props) => props.$width || \"auto\"};\n  height: ${(props) => props.$height || \"auto\"};\n`\n\nconst TableArea = styled.table`\n  padding: 2px;\n  width: 100%;\n  height: 100%;\n`\n\nconst TableHeader = styled.thead`\n  color: ${(props) => props.$columnColor || \"#000000\"};\n  background-color: ${(props) => props.$columnBackground || \"#bebade\"};\n  text-align: ${(props) => props.$columnAlign || \"center\"};\n`\n\nconst TableColumnTr = styled.tr``\n\nconst TableColumnTh = styled.th`\n  padding: 10px;\n  &:hover {\n    cursor: pointer;\n    color: ${(props) => props.$columnHoverColor || \"blue\"};\n    background-color: ${(props) => props.$columnHoverBackground || \"white\"};\n  }\n`\n\nconst TableBody = styled.tbody`\n  text-align: ${(props) => props.$rowAlign || \"center\"};\n  background-color: ${(props) => props.$rowBackground || \"#ffffff\"};\n  color: ${(props) => props.$rowColor || \"#000000\"};\n`\n\nconst TableBodyTr = styled.tr`\n  border-radius: 5%;\n  &:hover {\n    cursor: pointer;\n    color: ${(props) => props.$rowHoverColor || \"blue\"};\n    background-color: ${(props) => props.$rowHoverBackground || \"#bebade\"};\n  }\n`\n\nconst TableBodyTd = styled.td`\n  padding: 10px;\n`\n\nconst TableBodyCell = styled.span`\n  &:hover {\n    cursor: pointer;\n    color: ${(props) => props.$cellHoverColor || \"red\"};\n    background-color: ${(props) => props.$cellHoverBackground || \"#bebade\"};\n  }\n`\n\nconst CustomTable = ({\n  tableId,\n  columns,\n  rows,\n  onColumnClick,\n  onRowClick,\n  onCellClick,\n  $width,\n  $height,\n  $columnColor,\n  $columnHoverColor,\n  $columnHoverBackground,\n  $columnBackground,\n  $columnAlign,\n  $rowBackground,\n  $rowColor,\n  $rowHoverColor,\n  $rowHoverBackground,\n  $rowAlign,\n  $cellHoverColor,\n  $cellHoverBackground,\n}) => {\n  return (\n    <TableWrapper $height={$height} $width={$width}>\n      <TableArea id={tableId}>\n        <TableHeader\n          $columnColor={$columnColor}\n          $columnBackground={$columnBackground}\n          $columnAlign={$columnAlign}\n        >\n          <TableColumnTr>\n            {columns.map((column) => (\n              <TableColumnTh\n                $columnHoverColor={$columnHoverColor}\n                $columnHoverBackground={$columnHoverBackground}\n                key={`column-id-${column.id}`}\n                onClick={() => onColumnClick(column)}\n              >\n                {column.name}\n              </TableColumnTh>\n            ))}\n          </TableColumnTr>\n        </TableHeader>\n        <TableBody\n          $rowAlign={$rowAlign}\n          $rowBackground={$rowBackground}\n          $rowColor={$rowColor}\n        >\n          {rows.map((row) => (\n            <TableBodyTr\n              $rowHoverColor={$rowHoverColor}\n              $rowHoverBackground={$rowHoverBackground}\n              key={`row-id-${row.id}`}\n              onClick={() => onRowClick(row)}\n            >\n              {columns.map((column) => (\n                <TableBodyTd key={`row-${row.id}-col-${column.id}`}>\n                  <TableBodyCell\n                    $cellHoverColor={$cellHoverColor}\n                    $cellHoverBackground={$cellHoverBackground}\n                    onClick={(event) => {\n                      event.stopPropagation()\n                      onCellClick(row[column.id])\n                    }}\n                  >\n                    {row[column.id]}\n                  </TableBodyCell>\n                </TableBodyTd>\n              ))}\n            </TableBodyTr>\n          ))}\n        </TableBody>\n      </TableArea>\n    </TableWrapper>\n  )\n}\n\nexport default CustomTable\n"
  }
}
